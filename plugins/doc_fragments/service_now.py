# -*- coding: utf-8 -*-
# Copyright: (c) 2019, Ansible Project
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

from __future__ import absolute_import, division, print_function
__metaclass__ = type


class ModuleDocFragment(object):
    # Parameters for Service Now modules
    DOCUMENTATION = r'''
options:
    auth:
      description:
      - The method used to authenticate with the Service Now instance.
      - Basic authentication uses user name and password.
      - OAuth authentication uses a client id and secret in addition to Basic authentication.
      - Token authentication uses a bearer token in addition to OAuth authentication.
      - Okta authentication, based on OpenID, is used to obtain a bearer token.
      - If the vaule is not specified in the task, the value of environment variable C(SN_AUTH) will be used instead.
      choices: ['basic', 'oauth', 'token', 'okta']
      type: str
      default: basic
    instance:
      description:
      - The ServiceNow instance name, without the domain, service-now.com.
      - If the value is not specified in the task, the value of environment variable C(SN_INSTANCE) will be used instead.
      required: false
      type: str
    host:
      description:
      - The ServiceNow hostname.
      - This value is FQDN for ServiceNow host.
      - If the value is not specified in the task, the value of environment variable C(SN_HOST) will be used instead.
      - Mutually exclusive with C(instance).
      type: str
    username:
      description:
      - Name of user for connection to ServiceNow.
      - Required whether using Basic, OAuth or OpenID authentication.
      - If the value is not specified in the task, the value of environment variable C(SN_USERNAME) will be used instead.
      required: false
      type: str
    password:
      description:
      - Password for username.
      - Required whether using Basic, OAuth or OpenID authentication.
      - If the value is not specified in the task, the value of environment variable C(SN_PASSWORD) will be used instead.
      required: false
      type: str
    client_id:
      description:
      - Client ID generated by ServiceNow.
      - Required when using OAuth or OpenID authentication, unless token is specified.
      - If the value is not specified in the task, the value of environment variable C(SN_CLIENTID) will be used instead.
      required: false
      type: str
    client_secret:
      description:
      - Client Secret associated with client id.
      - Required when using OAuth or OpenID authentication, unless token is specified.
      - If the value is not specified in the task, the value of environment variable C(SN_CLIENTSECRET) will be used instead.
      required: false
      type: str
    token:
      description:
      - Bearer token associated with client id and secret.
      - Can be used in place of client id and secret for OpenID authentication.
      - If the value is not specified in the task, the value of environment variable C(SN_TOKEN) will be used instead.
      required: false
      type: str
    okta_domain:
      description:
      - The Okta Org Authorization Server when Okta is serving as the authorization server for itself in SSO mode.
      - This is required if 'auth' is set to 'okta'.
      - grant_type of 'password' is only supported.
      - Introspection and token auth methods only use 'client_secret_basic'.
      - If the value is not specified in the task, the value of environment variable C(OKTA_DOMAIN) will be used instead.
      required: false
      type: str
    okta_server:
      description:
      - The Custom Authorization Server id, if Okta is the identity platform for you app or API.
      - This is not needed in SSO mode.
      - A developer account can use 'default' for this id.
      - If the value is not specified in the task, the value of environment variable C(OKTA_SERVER) will be used instead.
      required: false
      type: str
    okta_scope:
      description:
      - A list of scopes to be included in the access token.
      - Supported scopes for this application are: address, email, groups, openid, phone, profile.
      - 'openid' must be one of the scopes in the list.
      required: false
      type: list
'''
